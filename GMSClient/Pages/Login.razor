@page "/"
@layout LoginLayout
@inject NavigationManager navigationManager
@inject StateContainer stateContainer

<link rel="icon" type="image/png" href="./images/icons/favicon.ico" />
<link rel="stylesheet" type="text/css" href="./CSS/bootstrap/bootstrap-rtl.min.css">
<link rel="stylesheet" type="text/css" href="./css/Fonts/font-awesome-4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" type="text/css" href="./css/Fonts/iconic/css/material-design-iconic-font.min.css">
<link rel="stylesheet" type="text/css" href="./vendor/animate/animate.css">
<link rel="stylesheet" type="text/css" href="./vendor/css-hamburgers/hamburgers.min.css">
<link rel="stylesheet" type="text/css" href="./vendor/animsition/css/animsition.min.css">
<link rel="stylesheet" type="text/css" href="./vendor/select2/select2.min.css">
<link rel="stylesheet" type="text/css" href="./vendor/daterangepicker/daterangepicker.css">
<link rel="stylesheet" type="text/css" href="./css/util.css">
<link rel="stylesheet" type="text/css" href="./css/main.css">
<link rel="stylesheet" type="text/css" href="./css/MyFonts.css">
<style>
    .container-login100::before {
        background-color: rgba(0,0,0,0.6) !important;
    }

    .container-login100 {
        justify-content: normal !important
    }

    .inputPlaceholderLogin {
        padding: 0px 26px 0 38px !important;
    }

    .RememberMe {
        position: absolute !important
    }
</style>

<div class="limiter">
    <div class="container-login100" style="background-image: url('images/BodyB1.jpg');">
        <div class="wrap-login100 offset-md-7" style="width:450px !important">
            <EditForm class="login100-form validate-form" Model="@user" OnValidSubmit="@ValidateUser">
                <span class="login100-form-logo">
                    <i class="zmdi zmdi-landscape"></i>
                </span>

                <span class="login100-form-title p-b-34 p-t-27" style="font-family : BYekan !important">
                    ورود به برنامه
                </span>

                <div class="wrap-input100 validate-input" data-validate="Enter username">
                    <input class="input100 inputPlaceholderLogin" type="text" @bind="user.UserName" name="username" placeholder="نام کابری">
                    <span class="focus-input100" data-placeholder="&#xf207;"></span>
                </div>

                <div class="wrap-input100 validate-input" data-validate="Enter password">
                    <input class="input100 inputPlaceholderLogin" type="password" @bind="user.Password" name="pass" placeholder="رمز ورود">
                    <span class="focus-input100" data-placeholder="&#xf191;"></span>
                </div>

                <div class="contact100-form-checkbox">
                    <input class="input-checkbox100 " id="ckb1" type="checkbox" name="remember-me">
                    <label class="label-checkbox100 RememberMe" for="ckb1" style="font-family :BYekan !important">
                        مرا به خاطر بسپار
                    </label>
                </div>

                <div class="container-login100-form-btn">
                    <input type="submit" class="login100-form-btn"
                           value="ورود به سیستم" style="font-size : 10px" />

                </div>
                <div class="col-12 row" style="text-align:center;color:orangered; font-weight:bold">
                    <span class="col-12">@LoginMesssage</span>
                </div>

                <div class="text-center p-t-90">
                    <a class="txt1" href="#">
                        رمز عبور را فراموش کرده ام
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
</div>


<div id="dropDownSelect1"></div>

@code {

    private User user;
    public string LoginMesssage { get; set; }


    protected async override Task OnInitializedAsync()
    {
        user = new User();

        if (!string.IsNullOrWhiteSpace(stateContainer.Token))
        {
            navigationManager.NavigateTo("/home");
        }
    }

    private async Task<bool> ValidateUser()
    {

        var data = BackendEngine.Login(user.UserName, user.Password);

        if (data != null && !string.IsNullOrWhiteSpace(data.access_token))
        {
            stateContainer.SetUser(data);
            stateContainer.SetToken(data.access_token);

            navigationManager.NavigateTo("/home");
        }
        else
        {
            LoginMesssage = "نام کاربری یا رمز عبور اشتباه است";
        }

        return await Task.FromResult(true);
    }

}